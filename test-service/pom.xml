<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.exiger.services.accounting</groupId>
	<artifactId>test-service</artifactId>
    <!-- Build number get injected from Jenkins. -->
    <version>${build.number}</version>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
		<spring-cloud-services.version>2.0.0.RELEASE</spring-cloud-services.version>
		<spring-boot.maven-plugin.version>2.0.5.RELEASE</spring-boot.maven-plugin.version>
		<spring-boot.dependencies.version>2.0.3.RELEASE</spring-boot.dependencies.version>
        <build.number>DEFAULT-SNAPSHOT</build.number>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-config</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>${spring-cloud-services.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<configuration>
					<excludes>
						<exclude>/com.exiger.services.accounting/config/**/*</exclude>
						<exclude>/com.exiger.services.accounting/exception/**/*</exclude>
						<exclude>/com.exiger.services.accounting/Application.class</exclude>
						<exclude>/com.exiger.services.accounting/enums/**/*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->

							<dataFile>target/jacoco.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
			</plugin>
            <!-- Docker plug-in -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <imageName>nexus.ddiq.com:9082/services/${project.artifactId}</imageName>
                    <dockerDirectory>docker</dockerDirectory>
                    <forceTags>true</forceTags>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <serverId>nexus-docker</serverId>
                    <registryUrl>https://nexus.ddiq.com:9082/v1/</registryUrl>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        <PROP_FILE>application.properties</PROP_FILE>
                        <VERSION>${project.version}</VERSION>
                    </buildArgs>
                </configuration>
            </plugin>
            <!-- Docker plug-in -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<mainClass>com.exiger.services.integration.Application</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
	</build>

	<scm>
		<url>scm:git:bitbucket.org:oiq/test-service.git</url>
		<connection>scm:git:bitbucket.org:oiq/test-service.git</connection>
		<developerConnection>scm:git:bitbucket.org:oiq/test-service.git</developerConnection>
	</scm>

	<distributionManagement>
		<!-- Publish the versioned releases here -->
		<repository>
			<id>exiger-nexus-releases</id>
			<name>Exiger Nexus Releases</name>
			<url>https://nexus.ddiq.com/repository/maven-releases/</url>
		</repository>

		<!-- Publish the versioned snapshots here -->
		<snapshotRepository>
			<id>exiger-nexus-snapshots</id>
			<name>Exiger Nexus Snapshots</name>
			<url>https://nexus.ddiq.com/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<!-- Publish the versioned releases here -->
		<repository>
			<id>exiger-nexus-releases</id>
			<name>Exiger Nexus Releases</name>
			<url>https://nexus.ddiq.com/repository/maven-releases/</url>
		</repository>

		<!-- Publish the versioned snapshots here -->
		<repository>
			<id>exiger-nexus-snapshots</id>
			<name>Exiger Nexus Snapshots</name>
			<url>https://nexus.ddiq.com/repository/maven-snapshots/</url>
		</repository>
	</repositories>

</project>
